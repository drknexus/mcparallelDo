% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcparallelDo.R
\name{jobCompleteSelfDestructingHandler}
\alias{jobCompleteSelfDestructingHandler}
\title{jobCompleteDestructingHandler}
\usage{
jobCompleteSelfDestructingHandler(targetJob, targetValue, verbose,
  targetEnvironment)
}
\arguments{
\item{targetJob}{(character) Name of the mcparallel job variable that is waiting for a result}

\item{targetValue}{A character element indicating the variable that the result of that job should be assigned to targetEnvironment}

\item{verbose}{A boolean element; if TRUE the completion of the fork expr will be accompanied by a message}

\item{targetEnvironment}{The environment in which you want targetValue to be created}
}
\value{
callback handler function
}
\description{
Creates a callback handler function that can be added via addTaskCallback().
These functions run at the end of each completed R statement.
This particular handler watches for the completion of the target job, which is created via mcparallel()
}

